# 
# Miscellaneous terminal goodies.
# 

# !!!TODO Learn more about bash strings, variables, strings,
#         substitutions, patterns, etc.

export PATH="$PATH:$HOME/bin"

# Load color definitions.
if [ -f ~/.bash_colors ]; then
    . ~/.bash_colors
fi

# Escaped colors (useful for the command prompt).
if [ -f ~/.bash_colors.escaped ]; then
    . ~/.bash_colors.escaped
fi

# Allows for color overrides.
if [ -f ~/.bash_colors_override ]; then
    . ~/.bash_colors_override
fi

# Some useful aliases.
# demand confirmation for the following
LS_BASE_OPTIONS='-hx'
alias ls="ls $LS_BASE_OPTIONS"
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

# Display color control chars only.
alias less='less -R'

alias ll='ls -l'
alias l='ls -lA'
alias aa='ls'
alias a='ls -A'

alias gs='git status'
alias gp='git pull'
alias grp='git reset --hard; gp'
alias gco='git checkout'

alias dr='drush'
alias drms='drush -r /apps/mags/docroot -l marthastewart.com'
alias drmw='drush -r /apps/mags/docroot -l marthastewartweddings.com'
alias drwl='drush -r /apps/mags/docroot -l wholeliving.com'
alias drug='drush -r /apps/ugc/docroot -l default'
alias drd='drush-debug'
alias drdms='drd -r /apps/mags/docroot -l marthastewart.com'
alias drdmw='drd -r /apps/mags/docroot -l marthastewartweddings.com'
alias drdwl='drd -r /apps/mags/docroot -l wholeliving.com'
alias drdug='drd -r /apps/ugc/docroot -l default'

# Custom completion functions (mostly for git aliases).
if [ -f ~/.bash_completion ]; then
    . ~/.bash_completion
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls $LS_BASE_OPTIONS --color=auto'
    
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Helper functions.
function drush-debug {
    export XDEBUG_CONFIG="idekey=PHPSTORM"
    export SERVER_NAME="pivanov.dev"
    export SERVER_PORT="9000"
    drush $*
    unset XDEBUG_CONFIG
    unset SERVER_NAME
    unset SERVER_PORT
};

function function_exists() {
    declare -f -F $1;
    return $?;
}

# Use function exists instead?
if [ -z "$(type -t __git_ps1)" ]; then
    function __git_ps1 {
        if [ -d ".git" ]; then
            local cur_branch=$(git rev-parse --abbrev-ref HEAD)
            if [ -n "$1" ]; then
                printf "$1" $cur_branch
            else
                printf "%s" $cur_branch
            fi
        fi
    }
fi

function _fancy_ps1_git_status_bar {
    local cur_branch="$(__git_ps1)"
    if [ -z "${cur_branch}" ]; then
        return 1
    fi
    
    printf "${Color_Off}${IWhite}%s ${BIYellow}%s${Color_Off}" 'branch' $cur_branch
    return 0
}

function _user_ps1 {
    local user_color=$PS1_USER_COLOR
    if [ "#" == "${USER_TYPE_SIGN}" ]; then
        user_color=$PS1_SUPERUSER_COLOR
    fi
    printf "${Color_Off}%b%s${Color_Off}" $user_color $USER
}

# Dollar sign for non-root users, hashtag for root.
function _user_type_sign {
    if [ "root" == "${USER}" ]; then
        echo -n '#'
        return 0
    else
        echo -n '$'
        return 0
    fi
}

function _move_cursor {
    echo -en "\033[$1;$2H"
    return 0
}

function _clear_line {
    echo -en "\033[${COLUMNS}D\033[K"
    return 0
}

# What is this function for?
function _status_bar {
    if [ -z "${FANCY_PS1_STATUS_BAR}" ]; then
        return 0
    fi
    
    local git_status="$(_fancy_ps1_git_status_bar)"
    
    _move_cursor 1 1
    _clear_line
    
    if [ ! -z "${git_status}" ]; then
        echo -en "${git_status}"
        _move_cursor 2 1
    fi
    
    echo -en "${FANCY_PS1_STATUS_BAR}"
    
    _move_cursor $LINES 1
    return 0
}

function _command_status {
    ecoh -en "$?"
}

# Prompt
# The hash (#) tag is used to signify root users and the dollar sign ($)
# is used for non-root users. Notice the signifying character at the end
# of the prompt.
# Are we an interactive shell?
if [ "$PS1" ]; then
    # FIXME Remove at some point. Used for debugging.
    printf "%s\n" "Using fancy prompt!"
    
    if [ "Z$HOSTNAME" = "Z" ]; then
        HOSTNAME="UNKNOWN-HOST"
    fi
    
    if [ -z "${PS1_HOSTNAME_COLOR}" ]; then
        PS1_HOSTNAME_COLOR="${On_IGreen}${BIBlack}"
    fi
    
    if [ -z "${PS1_USER_COLOR}" ]; then
        PS1_USER_COLOR="${IWhite}"
    fi
    
    if [ -z "${PS1_SUPERUSER_COLOR}" ]; then
        PS1_SUPERUSER_COLOR="${Red}"
    fi
    
    if [ -z "${PS1_HOSTNAME}" ]; then
        PS1_HOSTNAME="${Color_Off}${PS1_HOSTNAME_COLOR}$HOSTNAME${Color_Off}"
    fi
    
    USER_TYPE_SIGN="$(_user_type_sign)"
    # TODO Not in use? Why?
    FANCY_PS1_STATUS_BAR="${PS1_USER_COLOR}$USER${Color_Off}@${PS1_HOSTNAME} ${BWhite}$(pwd)${Color_Off}"
    
    FANCY_PS1_PREFIX="\$(_fancy_ps1_git_status_bar)\n${E_Yellow}\t${E_Color_Off}"
    FANCY_PS1_SUFFIX=" "
    
    # TODO Detect type of terminal, have multiple prompts for each terminal
    # or make a base modular and add/remove/replace elements.
    export PS1="${FANCY_PS1_PREFIX} \$(_user_ps1)@${PS1_HOSTNAME} ${BWhite}\w${Color_Off}\n${USER_TYPE_SIGN}>${FANCY_PS1_SUFFIX}"
fi;
