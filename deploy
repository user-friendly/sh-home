#!/bin/sh

# NOTE All filename variables are double quoted. Hopefully this will
#      prevent some problems with whitespce characters in filenames.

BASE_DIR="$1"
TARGET_DIR="$2"

# TODO: Consider all files from the base dir as deployable.
#       Provide a simple space sperated list of files to be
#       ignored.
# HOME_CONF_IGNORE=".git LICENSE README[^\s]*"
# SED_IGNORE=$(sed -r "s/$HOME_CONF_IGNORE//g")
# CONF_FILES=$(ls -A $BASE_DIR)
# echo "$CONF_FILES"
# HOME_CONF_IGNORE=".git LICENSE README.md"

CONF_DIRS="bin .bash_conf.d"
CONF_FILES=".bash_custom .bash_misc bin/ffpog .gitconfig\
 .emacs .git_commit_template .gitignore_global .tmux.conf"

mkdir="mkdir"
link="ln -s"

if [ -z "$BASE_DIR" ]; then
    BASE_DIR="$(pwd)"
fi

if [ -z "$TARGET_DIR" ]; then
    TARGET_DIR="$HOME"
fi

if [ ! -r "$BASE_DIR" ]; then
    echo "base dir does not exist or is not readable"
    exit 1
fi

if [ ! -w "$TARGET_DIR" ]; then
    echo "target dir does not exist or is not writeable"
    exit 1
fi

# Get all rc.d type bash config files and add them to the link setup.
CONF_FILES_RCD_DIR="$BASE_DIR/.bash_conf.d"
CONF_FILES_RCD=$(find -L $CONF_FILES_RCD_DIR -iname '[[:digit:]]*' \
                 -type f 2>/dev/null | sort -n 2>/dev/null)
CONF_FILES="$CONF_FILES $CONF_FILES_RCD"

# Create directories.
for dir in $CONF_DIRS; do
    abs_dir="$TARGET_DIR/$dir"
    if [ ! -w "$abs_dir" ]; then
        $mkdir "$abs_dir"
    else
        printf "skip %s\n" "$abs_dir"
    fi
done

# Symlink all config files.
for file in $CONF_FILES; do
    # Get rid of the base dir prefix.
    # FIXME This is only done because of the $CONF_FILES_RCD files.
    file=${file#${BASE_DIR}*[/|\\]}
    base_file="$BASE_DIR/$file"
    target_file="$TARGET_DIR/$file"
    
    if [ ! -L "$target_file" ]; then
        $link "$base_file" "$target_file"
    else
        if [ -L "$target_file" ]; then
            printf "skip %s, already linked\n" "$target_file"
        elif [ -f "$target_file" ]; then
            printf "skip %s, is a regular file\n" "$target_file"
        fi
    fi 
done

printf "\n\nWARNING: git user configuration options are not set\n"
printf "In order to not commit with an automatically derived user name\
and email, either configure a global one (not recommended) or setup\
echo repository.\n\n"
